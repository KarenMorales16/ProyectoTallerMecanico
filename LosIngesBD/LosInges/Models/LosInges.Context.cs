//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LosInges.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LosIngesEntities : DbContext
    {
        public LosIngesEntities()
            : base("name=LosIngesEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Auto> Auto { get; set; }
        public virtual DbSet<Cliente> Cliente { get; set; }
        public virtual DbSet<Departamento> Departamento { get; set; }
        public virtual DbSet<Diagnostico> Diagnostico { get; set; }
        public virtual DbSet<Empleado> Empleado { get; set; }
        public virtual DbSet<Factura> Factura { get; set; }
        public virtual DbSet<Producto> Producto { get; set; }
        public virtual DbSet<Promocion> Promocion { get; set; }
        public virtual DbSet<Puesto> Puesto { get; set; }
        public virtual DbSet<Restauracion> Restauracion { get; set; }
        public virtual DbSet<Status_Auto> Status_Auto { get; set; }
        public virtual DbSet<TipoCliente> TipoCliente { get; set; }
    
        public virtual int Alta_Empleado(string nombre, string apPat, string apMat, Nullable<int> idDepartamento, Nullable<int> idPuesto)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apPatParameter = apPat != null ?
                new ObjectParameter("ApPat", apPat) :
                new ObjectParameter("ApPat", typeof(string));
    
            var apMatParameter = apMat != null ?
                new ObjectParameter("ApMat", apMat) :
                new ObjectParameter("ApMat", typeof(string));
    
            var idDepartamentoParameter = idDepartamento.HasValue ?
                new ObjectParameter("IdDepartamento", idDepartamento) :
                new ObjectParameter("IdDepartamento", typeof(int));
    
            var idPuestoParameter = idPuesto.HasValue ?
                new ObjectParameter("IdPuesto", idPuesto) :
                new ObjectParameter("IdPuesto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Alta_Empleado", nombreParameter, apPatParameter, apMatParameter, idDepartamentoParameter, idPuestoParameter);
        }
    
        public virtual int Alta_Prod(Nullable<int> idCliente, string nombre, string apPat, string apMat, string telefono, string correo)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apPatParameter = apPat != null ?
                new ObjectParameter("ApPat", apPat) :
                new ObjectParameter("ApPat", typeof(string));
    
            var apMatParameter = apMat != null ?
                new ObjectParameter("ApMat", apMat) :
                new ObjectParameter("ApMat", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Alta_Prod", idClienteParameter, nombreParameter, apPatParameter, apMatParameter, telefonoParameter, correoParameter);
        }
    
        public virtual int SP_Auto_Alta(string placa, string marca, string modelo, Nullable<int> anio, Nullable<int> idCliente)
        {
            var placaParameter = placa != null ?
                new ObjectParameter("Placa", placa) :
                new ObjectParameter("Placa", typeof(string));
    
            var marcaParameter = marca != null ?
                new ObjectParameter("Marca", marca) :
                new ObjectParameter("Marca", typeof(string));
    
            var modeloParameter = modelo != null ?
                new ObjectParameter("Modelo", modelo) :
                new ObjectParameter("Modelo", typeof(string));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("Anio", anio) :
                new ObjectParameter("Anio", typeof(int));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Auto_Alta", placaParameter, marcaParameter, modeloParameter, anioParameter, idClienteParameter);
        }
    
        public virtual int SP_Auto_Eliminar(Nullable<int> idAuto, ObjectParameter salida)
        {
            var idAutoParameter = idAuto.HasValue ?
                new ObjectParameter("IdAuto", idAuto) :
                new ObjectParameter("IdAuto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Auto_Eliminar", idAutoParameter, salida);
        }
    
        public virtual int SP_AutoRestauracion_Alta(Nullable<int> idAuto, Nullable<int> idEmpleado, Nullable<int> idDepartamento, string descripcion, Nullable<decimal> precioRestauracion, Nullable<int> idProducto)
        {
            var idAutoParameter = idAuto.HasValue ?
                new ObjectParameter("IdAuto", idAuto) :
                new ObjectParameter("IdAuto", typeof(int));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            var idDepartamentoParameter = idDepartamento.HasValue ?
                new ObjectParameter("IdDepartamento", idDepartamento) :
                new ObjectParameter("IdDepartamento", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var precioRestauracionParameter = precioRestauracion.HasValue ?
                new ObjectParameter("PrecioRestauracion", precioRestauracion) :
                new ObjectParameter("PrecioRestauracion", typeof(decimal));
    
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_AutoRestauracion_Alta", idAutoParameter, idEmpleadoParameter, idDepartamentoParameter, descripcionParameter, precioRestauracionParameter, idProductoParameter);
        }
    
        public virtual int SP_Cliente_Alta(string nombre, string apPat, string apMat, string telefono, string correo)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apPatParameter = apPat != null ?
                new ObjectParameter("ApPat", apPat) :
                new ObjectParameter("ApPat", typeof(string));
    
            var apMatParameter = apMat != null ?
                new ObjectParameter("ApMat", apMat) :
                new ObjectParameter("ApMat", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Cliente_Alta", nombreParameter, apPatParameter, apMatParameter, telefonoParameter, correoParameter);
        }
    
        public virtual int SP_Cliente_Update(Nullable<int> idCliente, string nombre, string apPat, string apMat, string telefono, string correo)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apPatParameter = apPat != null ?
                new ObjectParameter("ApPat", apPat) :
                new ObjectParameter("ApPat", typeof(string));
    
            var apMatParameter = apMat != null ?
                new ObjectParameter("ApMat", apMat) :
                new ObjectParameter("ApMat", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Cliente_Update", idClienteParameter, nombreParameter, apPatParameter, apMatParameter, telefonoParameter, correoParameter);
        }
    
        public virtual int SP_Empleado_Update(Nullable<int> idEmpleado, string nombre, string apPat, string apMat, Nullable<int> idDepartamento, Nullable<int> idPuesto)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apPatParameter = apPat != null ?
                new ObjectParameter("ApPat", apPat) :
                new ObjectParameter("ApPat", typeof(string));
    
            var apMatParameter = apMat != null ?
                new ObjectParameter("ApMat", apMat) :
                new ObjectParameter("ApMat", typeof(string));
    
            var idDepartamentoParameter = idDepartamento.HasValue ?
                new ObjectParameter("IdDepartamento", idDepartamento) :
                new ObjectParameter("IdDepartamento", typeof(int));
    
            var idPuestoParameter = idPuesto.HasValue ?
                new ObjectParameter("IdPuesto", idPuesto) :
                new ObjectParameter("IdPuesto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Empleado_Update", idEmpleadoParameter, nombreParameter, apPatParameter, apMatParameter, idDepartamentoParameter, idPuestoParameter);
        }
    
        public virtual int Alta_Producto(string descripcion, string noParte)
        {
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var noParteParameter = noParte != null ?
                new ObjectParameter("NoParte", noParte) :
                new ObjectParameter("NoParte", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Alta_Producto", descripcionParameter, noParteParameter);
        }
    
        public virtual int SP_Auto_EstadoTerminado(Nullable<int> idAuto, ObjectParameter salida)
        {
            var idAutoParameter = idAuto.HasValue ?
                new ObjectParameter("IdAuto", idAuto) :
                new ObjectParameter("IdAuto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Auto_EstadoTerminado", idAutoParameter, salida);
        }
    }
}
